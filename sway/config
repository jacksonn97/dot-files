# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Sway theme

# smart_borders on
default_border pixel 0
# smart_gaps on
gaps inner 4

# Colors (gruvbox theme)
set {
	$black		#282828
	$red		#cc241d
	$green		#98971a
	$yellow		#d79921
	$blue		#458588
	$purple		#b16286
	$aqua		#689d6a
	$gray		#a89984
	$brgray		#928374
	$brred		#fb4934
	$brgreen	#b8bb26
	$bryellow	#fabd2f
	$brblue		#83a598
	$brpurple	#d3869b
	$braqua		#8ec07c
	$white		#ebdbb2

	$a		e0
	$focused	$braqua
	$inactive	$purple
	$unfocused	$black
	$urgent		$yellow
}

# Border colors (see `man 5 sway`)
# class				    border		titlebar	bg		text	indicator
client.focused			$focused	$focused	$black	$focused
client.focused_inactive $inactive	$inactive	$white	$focused
client.unfocused		$unfocused	$unfocused	$white	$focused
client.urgent			$urgent		$urgent		$black	$focused


### Variable
# Logo key. Use Mod1 for Alt.
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

### Input
input * {
	xkb_layout "us,ru"
	xkb_options "grp:alt_shift_toggle, caps:super"
	xkb_numlock enable
	accel_profile flat
	pointer_accel 0
}

font pango: dejavu sans mono 7
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

set $menu fuzzel -i

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg ~/.wallpapers/$(ls ~/.wallpapers/ | shuf -n 1) fill
output * bg ~/.wallpapers/sunset_and_river.jpg fill

output HDMI-A-1 mode 1920x1080@74.973000Hz

### Key bindings
#
# Basics:
#
	# Start a terminal
	bindsym $mod+Return exec $term

	# Kill focused window
	bindsym --to-code $mod+Shift+q kill

# Start your launcher
	bindsym --to-code $mod+d exec $menu
	bindsym --to-code Print exec grim ~/Images/screenshots/screenshot-"$(date +%T)"-"$(date +%d)".jpg

	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Reload the configuration file
	bindsym --to-code $mod+Shift+c reload

	# Exit sway (logs you out of your Wayland session)
	bindsym --to-code $mod+Shift+e exec swaynag -t warning \
	--background 282828\
	--border-bottom a89984\
	--text dbdbb2\
	--button-text dbdbb2\
	--font "Deja Vu Ssns Mono 9"\
	--border 1d2021\
	--button-background 3c3836\
	--button-border-size 1\
	--edge top\
	-m \
		'You pressed the exit shortcut. What do you want?' \
		-b 'Logout' 'swaymsg exit' \
		-b 'Sleep' 'swaylock -elf -c 000000 && systemctl suspend' \
		-b 'Reboot' 'systemctl reboot' \
		-b 'Poweroff' 'systemctl poweroff'

# Lock sway
bindsym --to-code $mod+Alt+l exec swaylock -elf -c 000000

# flating windows

	for_window [window_role="pop-up"] floating enable
	for_window [window_role="bubble"] floating enable
	for_window [window_role="dialog"] floating enable
	for_window [window_role="task-dialog"] floating enable

	for_window [window_type="dialog"] floating enable

	for_window [app_id="veracrypt"] floating enable
	for_window [app_id="keepassxc"] floating enable

	for_window [title="LibreWolf - Choose User Profile"] floating enable

# Window default place

	assign [app_id="LibreWolf"] workspace 2
	assign [app_id="org.telegram.desktop"] workspace 4
	assign [class="Google-chrome"] workspace 4


bindsym $mod+F6 output "HDMI-A-1" toggle ; output "eDP-1" toggleN

#
# Moving around:
#
	# Or use $mod+[up|down|left|right]
	bindsym --to-code $mod+$left focus left
	bindsym --to-code $mod+$down focus down
	bindsym --to-code $mod+$up focus up
	bindsym --to-code $mod+$right focus right

	# Ditto, with arrow keys
	bindsym --to-code $mod+Shift+$left move left
	bindsym --to-code $mod+Shift+$down move down
	bindsym --to-code $mod+Shift+$up move up
	bindsym --to-code $mod+Shift+$right move right
#
# Workspaces:
#
	# Switch to workspace
	bindsym $mod+1 workspace number 1
	bindsym $mod+2 workspace number 2
	bindsym $mod+3 workspace number 3
	bindsym $mod+4 workspace number 4
	bindsym $mod+5 workspace number 5
	bindsym $mod+6 workspace number 6
	bindsym $mod+7 workspace number 7
	bindsym $mod+8 workspace number 8
	bindsym $mod+9 workspace number 9
	bindsym $mod+0 workspace number 10
	# Move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number 1
	bindsym $mod+Shift+2 move container to workspace number 2
	bindsym $mod+Shift+3 move container to workspace number 3
	bindsym $mod+Shift+4 move container to workspace number 4
	bindsym $mod+Shift+5 move container to workspace number 5
	bindsym $mod+Shift+6 move container to workspace number 6
	bindsym $mod+Shift+7 move container to workspace number 7
	bindsym $mod+Shift+8 move container to workspace number 8
	bindsym $mod+Shift+9 move container to workspace number 9
	bindsym $mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
#
# Media keys
#

	bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
	bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
	bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
	bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
	bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
	bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
	bindsym XF86AudioPlay exec playerctl play-pause
	bindsym XF86AudioNext exec playerctl next
	bindsym XF86AudioPrev exec playerctl previous

#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	bindsym --to-code $mod+b splith
	bindsym --to-code $mod+v splitv

	# Switch the current container between different layout styles
	bindsym --to-code $mod+s layout stacking
	bindsym --to-code $mod+w layout tabbed
	bindsym --to-code $mod+e layout toggle split

	# Make the current focus fullscreen
	bindsym --to-code $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	bindsym $mod+space focus mode_toggle

	# Move focus to the parent container
	bindsym $mod+a focus parent
#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {

	bindsym --to-code $left  resize shrink width 10px
	bindsym --to-code $right resize grow width 10px

	bindsym --to-code $up	 resize grow height 10px
	bindsym --to-code $down	 resize shrink height 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+i nop kitti3


#
# Custom application
#
bindsym --to-code $mod+t exec telegram-desktop

#
# Status Bar:
#
bar {
	swaybar_command waybar
}

exec {
	gsettings set org.gnome.desktop.interface gtk-theme "Qogir"
	gsettings set org.gnome.desktop.interface icon-theme "Qogir"
	mako --default-timeout 8000
	python3 ~/Documents/searx/searx/webapp.py
	python3 ~/.usersrcipts/noisy/noisy.py --config ~/.autorun/noisy/config.json
}

include /etc/sway/config.d/*
